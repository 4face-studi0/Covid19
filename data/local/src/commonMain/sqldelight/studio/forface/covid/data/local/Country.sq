import studio.forface.covid.domain.entity.CountryId;
import studio.forface.covid.domain.entity.Name;

CREATE TABLE country (
  id TEXT AS CountryId PRIMARY KEY,
  name TEXT AS Name NOT NULL
);

-- Indexes
CREATE INDEX country_name ON country(name);

-- Select
selectAll:
  SELECT * FROM country
  ORDER BY name;

selectAllByName:
  SELECT * FROM country
  WHERE name LIKE ('%' || :query || '%')
  ORDER BY name;

selectById:
  SELECT * FROM country
  WHERE id = ?;

-- Insert
insert:
  INSERT OR REPLACE
  INTO country(id, name)
  VALUES (?, ?);

-- Delete
deleteAll:
  DELETE FROM country;

deleteById:
  DELETE FROM country
  WHERE id = ?;

-- CountryWithProvinces
countyWithProvinces:
  CREATE VIEW countryWithProvinces AS
  SELECT
    country.id,
    country.name,
    province.id provinceId,
    province.name provinceName,
    province.lat provinceLat,
    province.lng provinceLng
  FROM country
  JOIN province ON province.country_id = country.id;

selectAllCountriesWithProvinces:
  SELECT *
  FROM countryWithProvinces
  ORDER BY countryWithProvinces.name, countryWithProvinces.provinceName;

selectAllCountryWithProvincesById:
  SELECT *
  FROM countryWithProvinces
  WHERE countryWithProvinces.id = ?
  ORDER BY countryWithProvinces.provinceName;

-- CountryStat
countryStat:
  CREATE VIEW countryStat AS
  SELECT
    country.id countryId,
    country.name countryName,
    province.id provinceId,
    province.name provinceName,
    province.lat provinceLat,
    province.lng provinceLng,
    stat.confirmed,
    stat.deaths,
    stat.recovered,
    stat.timestamp
  FROM country
  JOIN province ON province.country_id = country.id
  JOIN stat ON stat.parent_id = country.id;

selectAllCountryStats:
  SELECT *
  FROM countryStat
  ORDER BY countryStat.countryName, countryStat.timestamp DESC;

selectAllCountryStatsById:
  SELECT *
  FROM countryStat
  WHERE countryStat.countryId = ?
  ORDER BY countryStat.countryName, countryStat.timestamp DESC;

-- CountryWithProvinceStat
countryWithProvinceStat:
  CREATE VIEW countryWithProvinceStat AS
  SELECT
    country.id countryId,
    country.name countryName,
    cStat.confirmed countryConfirmed,
    cStat.deaths countryDeaths,
    cStat.recovered countryRecovered,
    cStat.timestamp countryTimestamp,

    province.id provinceId,
    province.name provinceName,
    province.lat provinceLat,
    province.lng provinceLng,
    pStat.confirmed provinceConfirmed,
    pStat.deaths provinceDeaths,
    pStat.recovered provinceRecovered,
    pStat.timestamp provinceTimestamp
  FROM country
  JOIN stat cStat ON cStat.parent_id = country.id
  JOIN province ON province.country_id = country.id
  JOIN stat pStat ON pStat.parent_id = province.id;

selectAllCountryWithProvinceStats:
  SELECT *
  FROM countryWithProvinceStat
  ORDER BY
    countryWithProvinceStat.countryName,
    countryWithProvinceStat.countryTimestamp DESC,
    countryWithProvinceStat.provinceName,
    countryWithProvinceStat.provinceTimestamp DESC;

selectAllCountryWithProvinceStatsById:
  SELECT *
  FROM countryWithProvinceStat
  WHERE countryWithProvinceStat.countryId = ?
  ORDER BY
    countryWithProvinceStat.countryName,
    countryWithProvinceStat.countryTimestamp DESC,
    countryWithProvinceStat.provinceName,
    countryWithProvinceStat.provinceTimestamp DESC;

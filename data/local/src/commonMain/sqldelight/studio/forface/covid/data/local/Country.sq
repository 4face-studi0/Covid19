import studio.forface.covid.domain.entity.CountryId;
import studio.forface.covid.domain.entity.Name;

CREATE TABLE country (
  id TEXT AS CountryId PRIMARY KEY,
  name TEXT AS Name NOT NULL
);

-- Indexes
CREATE INDEX country_name ON country(name);


-- Views
CREATE VIEW countryWithFavorite AS
SELECT
  country.id,
  country.name,
  favorite.favorite
FROM country
JOIN favorite ON favorite.id = country.id;

CREATE VIEW countryWithProvinces AS
SELECT
  countryWithFavorite.id,
  countryWithFavorite.name,
  countryWithFavorite.favorite,
  province.id provinceId,
  province.name provinceName,
  province.lat provinceLat,
  province.lng provinceLng
FROM countryWithFavorite
JOIN province ON province.country_id = countryWithFavorite.id;

CREATE VIEW countryStat AS
SELECT
  countryWithProvinces.id countryId,
  countryWithProvinces.name countryName,
  countryWithProvinces.favorite countryFavorite,
  countryWithProvinces.provinceId provinceId,
  countryWithProvinces.provinceName provinceName,
  countryWithProvinces.provinceLat provinceLat,
  countryWithProvinces.provinceLng provinceLng,
  stat.confirmed,
  stat.deaths,
  stat.recovered,
  stat.timestamp
FROM countryWithProvinces
JOIN stat ON stat.parent_id = countryWithProvinces.id;

CREATE VIEW countryWithProvinceStat AS
SELECT
  countryWithProvinces.id countryId,
  countryWithProvinces.name countryName,
  countryWithProvinces.favorite countryFavorite,
  cStat.confirmed countryConfirmed,
  cStat.deaths countryDeaths,
  cStat.recovered countryRecovered,
  cStat.timestamp countryTimestamp,

  countryWithProvinces.provinceId provinceId,
  countryWithProvinces.provinceName provinceName,
  countryWithProvinces.provinceLat provinceLat,
  countryWithProvinces.provinceLng provinceLng,
  pStat.confirmed provinceConfirmed,
  pStat.deaths provinceDeaths,
  pStat.recovered provinceRecovered,
  pStat.timestamp provinceTimestamp
FROM countryWithProvinces
JOIN stat cStat ON cStat.parent_id = countryWithProvinces.id
JOIN stat pStat ON pStat.parent_id = countryWithProvinces.provinceId;


-- Select
selectAllByName:
  SELECT *
  FROM countryWithProvinces
  WHERE name LIKE ('%' || :query || '%')
  ORDER BY favorite DESC, name;

selectAllCountriesWithProvinces:
  SELECT *
  FROM countryWithProvinces
  ORDER BY countryWithProvinces.name, countryWithProvinces.provinceName;

selectAllCountryWithProvincesById:
  SELECT *
  FROM countryWithProvinces
  WHERE countryWithProvinces.id = ?
  ORDER BY countryWithProvinces.name, countryWithProvinces.provinceName;

selectAllCountryStats:
  SELECT *
  FROM countryStat
  ORDER BY countryStat.countryName, countryStat.timestamp DESC;

selectAllCountryStatsById:
  SELECT *
  FROM countryStat
  WHERE countryStat.countryId = ?
  ORDER BY countryStat.countryName, countryStat.timestamp DESC;

selectAllCountryWithProvinceStats:
  SELECT *
  FROM countryWithProvinceStat
  ORDER BY
    countryWithProvinceStat.countryName,
    countryWithProvinceStat.countryTimestamp DESC,
    countryWithProvinceStat.provinceName,
    countryWithProvinceStat.provinceTimestamp DESC;

selectAllCountryWithProvinceStatsById:
  SELECT *
  FROM countryWithProvinceStat
  WHERE countryWithProvinceStat.countryId = ?
  ORDER BY
    countryWithProvinceStat.countryName,
    countryWithProvinceStat.countryTimestamp DESC,
    countryWithProvinceStat.provinceName,
    countryWithProvinceStat.provinceTimestamp DESC;

-- Insert
insert:
  INSERT OR REPLACE
  INTO country(id, name)
  VALUES (?, ?);

-- Delete
deleteAll:
  DELETE FROM country;

deleteById:
  DELETE FROM country
  WHERE id = ?;
